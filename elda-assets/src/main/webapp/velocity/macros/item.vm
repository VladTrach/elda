## Macros for displaying a single item

#macro( eldaItem $hnode )
  #showRdfResource( $hnode, "section", "outer" )
#end

## Display an RDF resource
#macro( showRdfResource $hnode, $elem, $level )
  #set( $resource = $hnode.rdfNode() )
  <$elem class="rdf resource $level">
    #if( $level.equals( "outer" ))
      <div class="row">
        #itemName( $resource, "h1", "col-md-12" )
        #itemURI( $resource, "h2", "col-md-12" )
        #itemTypes( $resource, "col-md-12" )
        #itemProperties( $hnode, $level )
      </div>
    #else
      #itemName( $resource, "h3" )
      #itemURI( $resource, "h4" )
      #itemTypes( $resource )
      #itemProperties( $hnode, $level )
    #end
  </$elem>
#end

## Display the name of the resource
#macro( itemName $resource $h $css )
  <div class="$css">
    <$h class="resource-label">$resource.getName()</$h>
  </div>
#end

## Display the item URI
#macro( itemURI $resource $h $css )
  <div class="$css">
    <$h class="resource-uri"><a href="$resource.getURI()">$resource.getURI()</a></$h>
  </div>
#end

## Display a list of types for the resource, if any are known
#macro( itemTypes $resource $css )
  #set( $types = $resource.types() )
  #if( $types.size() > 0 )
    <div class="$css">
      <div class="resource-types">
        a
        <ul class="list-inline">
          #foreach( $type in $types )
            <li>
              <a href="$type.getURI()">$type.getName()</a>
            </li>
          #end
        </ul>
      </div>
    </div>
  #end
#end

## Show the various properties of the item
#macro( itemProperties $hNode $level )
  #if( $hNode.children().size() > 0)
    <div class="col-md-12">
      <ul class="resource-properties">
        #foreach( $childNode in $hNode.children() )
            <div class="property-value-row $childNode.hintsString()">
              #if( $childNode.hasHint( "literal" ))
                #literalValuedNode( $childNode )
              #else
                #resourceValuedNode( $childNode )
              #end
            </div>
        #end
      </ul>
    </div>
  #end
#end

## Show a property-value pair where the value is known to be a literal
#macro( literalValuedNode $hNode )
  <div class="row">
    <li class="">
      <div class="col-md-4">
        #propertyPredicate( $hNode.terminalLink() )
      </div>
      <div class="col-md-8">
        #propertyValue( $hNode )
      </div>
    </li>
  </div>
#end

## Show a property value pair where the value is known to be a resource
#macro( resourceValuedNode $hNode )
  <div class="row">
    <li class="">
      <div class="col-md-4">
        #propertyPredicate( $hNode.terminalLink() )
      </div>
      <div class="col-md-8">
        #propertyValue( $hNode )
      </div>
    </li>
  </div>
#end

## Show the predicate of a property-value
#macro( propertyPredicate $p )
  <div class="rdf predicate">
    <a href="$p.getURI()">$p.getName()</a>
  </div>
#end

## Determine how to present a property value - single item or list?
#macro( propertyValue $node )
  #if( $node.hasSiblings() )
    #propertyMultiValue( $node )
  #else
    #propertySingleValue( $node )
  #end
#end

## Single value of a property
#macro( propertySingleValue $node )
  #propertyObject( $node, "first" )
#end

## List value of a property
#macro( propertyMultiValue $node )
  <ul class="rdf object multiple">
    <li class="first $node.hintsString()">
      #propertyObject( $node )
    </li>
    #foreach( $sibling in $node.siblings())
      <li class="$sibling.hintsString()">
        #propertyObject( $sibling )
      </li>
    #end
  </ul>
#end

## Show the value of a property-value
#macro( propertyObject $node )
  #if( $node.rdfNode().isLiteral() )
    #propertyObjectLiteral( $node.rdfNode() )
  #else
    #propertyObjectResource( $node )
  #end
#end

## Show a literal-value
#macro( propertyObjectLiteral $lit )
  <div class="rdf object literal">
    $lit.getLexicalForm()
  </div>
#end

## Show a resource-value
#macro( propertyObjectResource $node )
  <div class="rdf object">
    #showRdfResource( $node, "div", "nested" )
  </div>
#end
