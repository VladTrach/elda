Overall tasks:

    * move to clean, separate code repository
    * clean out the SDX specific machinery from the lda project
    * design better configuration machinery (based on assemblers?) to
      remove the tdb dependencies
    * move namespace from com.epimorphics.sdx to com.epimorphics.lda
    * refactor to separate out the phases more cleanly
    * upgrade unit tests
    * bring each phase up to spec
    * cache management system
          o plug into standard cache manager API?
          o label cache separate from description cache?
    * packaged version with Joseki and Jetty/Grizzly
    * documentation

Bringing up to spec
1. Endpoint selection

    * api:base processing
    * parameter templates
    * improve dispatcher (dynamic Jersey? DIY?)
    * Item/List endpoint

2. Variable binding resolution

    * endpoint & API variables
    * variable binding resolution algorithm

3. Select and describe

    * Item endpoint
    * _select/api:select
    * _where/api:where
    * some parameter name clean up
    * exists
    * contingency - there's lots of bitty changes in here

4. View generation

    * Item endpoint
    * explict describeViewer/labelledDescribeViewer/basicViewer
    * property chains in _properties/api:properties
    * metadata fix ups

5. Formatting

    * HTML
          o general template engine
          o template supporting bNode display
          o extensions to allow template in API spec?
    * JSON
          o handling of api:structured and lang tagged literals
          o refactor to separate structure walk from render
          o drop json.org and use jettison (or Andy's code if that's available)

    * add context stuff to spec
    * XML formatter - reusing JSON structure walk
    * XSLT formatting
